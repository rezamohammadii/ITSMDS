@page "/servers"
@using System.Linq
@using System.Linq.Expressions
@using ITSMDS.Domain.DTOs
@using ITSMDS.Domain.Enums
@using ITSMDS.Web.Components.Pages.Server.Component
@inject NavigationManager NavigationManager
@inject ServerApiClient ServerApi


<PageTitle>مدیریت سرورها</PageTitle>

<div class="container-fluid px-4">
    <!-- هدر صفحه -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-1 text-gradient">مدیریت سرورها</h1>
            <p class="text-muted mb-0"> مدیریت سرورهای شرکت گسترش</p>
        </div>
        <div>
            <Button Color="ButtonColor.Primary" Size="ButtonSize.Small" Type="ButtonType.Link" @onclick="HandleClick">
                
                <Icon Name="IconName.PlusCircle" Class="me-1"></Icon>
                افزودن سرور جدید
            </Button>
        </div>
    </div>
    @if (SERVER_WIDGET_DATA != null)
    {
        <div class="row mb-4">
            <div class="col-xl-3 col-md-6 mb-4">
                <Card Class="card-statistic border-0 shadow-sm rounded-3 overflow-hidden">
                    <CardBody Class="p-3">
                        <div class="row">
                            <div class="col-8">
                                <div class="text-secondary mb-1">تعداد کل سرورهای فعال</div>
                                <div class="fw-bold fs-3 text-primary">@SERVER_WIDGET_DATA.ServerActiveCount</div>
                                <div class="text-primary small mt-1">
                                    <Icon Name="IconName.Activity" Class="me-1"></Icon>
                                    <span>@SERVER_WIDGET_DATA.ServerUpPercentSalary % نسب به کل</span>
                                </div>
                            </div>
                            <div class="col-4 text-start">
                                <div class="icon-statistic bg-primary-subtle">
                                    <Icon Name="IconName.Server" Class="text-primary" Size="IconSize.x4"></Icon>
                                </div>
                            </div>
                        </div>
                    </CardBody>
                </Card>
            </div>

            <div class="col-xl-3 col-md-6 mb-4">
                <Card Class="card-statistic border-0 shadow-sm rounded-3 overflow-hidden">
                    <CardBody Class="p-3">
                        <div class="row">
                            <div class="col-8">
                                <div class="text-secondary mb-1">تعداد کل سرور های عملیاتی</div>
                                <div class="fw-bold fs-3 text-success">@SERVER_WIDGET_DATA.ServerOperationalCount</div>
                                <div class="text-success small mt-1">
                                    <Icon Name="IconName.Activity" Class="me-1"></Icon>
                                    <span>@SERVER_WIDGET_DATA.ServerOperationalPercentSalary % نسب به کل</span>
                                </div>
                            </div>
                            <div class="col-4 text-end">
                                <div class="icon-statistic bg-success-subtle">
                                    <Icon Name="IconName.HddStack" Class="text-success" Size="IconSize.x4"></Icon>
                                </div>
                            </div>
                        </div>
                    </CardBody>
                </Card>
            </div>

            <div class="col-xl-3 col-md-6 mb-4">
                <Card Class="card-statistic border-0 shadow-sm rounded-3 overflow-hidden">
                    <CardBody Class="p-3">
                        <div class="row">
                            <div class="col-8">
                                <div class="text-secondary mb-1">تعداد کل سرورهای تستی</div>
                                <div class="fw-bold fs-3 text-info">@SERVER_WIDGET_DATA.ServerTestCount</div>
                                <div class="text-info small mt-1">
                                    <Icon Name="IconName.Activity" Class="me-1"></Icon>
                                    <span>@SERVER_WIDGET_DATA.ServerTestPercentSalary % نسب به کل </span>
                                </div>
                            </div>
                            <div class="col-4 text-end">
                                <div class="icon-statistic bg-info-subtle">
                                    <Icon Name="IconName.Tools" Class="text-info" Size="IconSize.x4"></Icon>
                                </div>
                            </div>
                        </div>
                    </CardBody>
                </Card>
            </div>

            <div class="col-xl-3 col-md-6 mb-4">
                <Card Class="card-statistic border-0 shadow-sm rounded-3 overflow-hidden">
                    <CardBody Class="p-3">
                        <div class="row">
                            <div class="col-8">
                                <div class="text-secondary mb-1">تعداد کل سرور های توسعه</div>
                                <div class="fw-bold fs-3 text-warning">@SERVER_WIDGET_DATA.ServerDevelopCount</div>
                                <div class="text-warning small mt-1">
                                    <Icon Name="IconName.Activity" Class="me-1"></Icon>
                                    <span>@SERVER_WIDGET_DATA.ServerDevelopPercentSalary % نسب به کل</span>
                                </div>
                            </div>
                            <div class="col-4 text-end">
                                <div class="icon-statistic bg-warning-subtle">
                                    <Icon Name="IconName.PcDisplayHorizontal" Class="text-warning" Size="IconSize.x4"></Icon>
                                </div>
                            </div>
                        </div>
                    </CardBody>
                </Card>
            </div>
        </div>
    }
    else
    {
        <div class="text-center p-4">
            <span class="text-muted">در حال بارگذاری اطلاعات سرورها...</span>
        </div>
    }
    <!-- کارت‌های آماری -->
   

    <div class="row">
        <!-- لیست سرورها -->
        <div class="col-lg-12 mb-4">
            <Card Class="border-0 shadow-sm rounded-3 h-100">
                <CardHeader Class="bg-transparent border-0 pb-0">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h5 class="card-title mb-0">لیست سرورها</h5>
                        <div class="input-group mb-3">
                            <InputText class="form-control" @bind-Value="SearchTerm"
                                       @oninput="OnSearchChanged" placeholder="نام سرور ..." />
                            <span class="input-group-text">🔍 جستجو</span>
                        </div>
                    </div>
                    
                </CardHeader>
                <CardBody>

                    <Grid @ref="ServerGrid" TItem="ServerViewModel"
                          DataProvider="ServerDataProvider"
                          AllowPaging="true"
                          AutoHidePaging="true"
                          Class="table table-hover table-bordered table-striped"
                          PageSize="10"
                          PageSizeSelectorVisible="true"
                          ItemsPerPageText="تعداد نمایش"
                          PageSizeSelectorItems="@(new int[] { 5,10,20 })"
                          Responsive="true">

                        <GridColumn TItem="ServerViewModel" HeaderText="نام سرور" HeaderTextAlignment="Alignment.Center">
                            @context.ServerName
                        </GridColumn>

                        <GridColumn TItem="ServerViewModel" HeaderText="آدرس سرور" HeaderTextAlignment="Alignment.Center">
                            @context.IpAddress
                        </GridColumn>

                        <GridColumn TItem="ServerViewModel" HeaderText="پردازنده" HeaderTextAlignment="Alignment.Center">
                            @context.CPU
                        </GridColumn>

                        <GridColumn TItem="ServerViewModel" HeaderText="سیستم عامل" HeaderTextAlignment="Alignment.Center">
                            @context.OS
                        </GridColumn>

                        <GridColumn TItem="ServerViewModel" HeaderText="مقدار رم GB" HeaderTextAlignment="Alignment.Center">
                            @context.RAM
                        </GridColumn>

                        <GridColumn TItem="ServerViewModel" HeaderText="تاریخ ایجاد" HeaderTextAlignment="Alignment.Center">
                            @context.CreateDate
                        </GridColumn>

                        <GridColumn TItem="ServerViewModel" HeaderText="GB حجم حافظه" HeaderTextAlignment="Alignment.Center">
                            @context.StorageSize
                        </GridColumn>

                        <GridColumn TItem="ServerViewModel" HeaderText="نوع حافظه" HeaderTextAlignment="Alignment.Center">
                            @switch (@context.StorageType)
                            {
                                case (int)ServerEnum.StorageType.HDD:
                                    @: <span> HDD </span>
                                    break;
                                case (int)ServerEnum.StorageType.SSD:
                                    @: <span> SDD </span>
                                    break;
                                case (int)ServerEnum.StorageType.NVME:
                                    @: <span> NVME </span>
                                    break;
                            }
                            
                        </GridColumn>

                        <GridColumn TItem="ServerViewModel" HeaderText="مدل سرور" HeaderTextAlignment="Alignment.Center">
                            @context.MainBoardModel
                        </GridColumn>

                      @*   <GridColumn TItem="ServerViewModel" HeaderText="مسئول سرور" HeaderTextAlignment="Alignment.Center">
                            @context.ServerManager
                        </GridColumn> *@

                        <GridColumn TItem="ServerViewModel" HeaderText="وضعیت" HeaderTextAlignment="Alignment.Center">
                            @switch (context.Status)
                            {
                                case (int)ServerEnum.ServerStatus.Unknown:
                                    <Badge Class="m-1" Color="BadgeColor.Dark">نام مشخص</Badge>
                                    break;
                                case (int)ServerEnum.ServerStatus.Updating:
                                    <Badge Class="m-1" Color="BadgeColor.Warning">در حال به روز رسانی</Badge>
                                    break;
                                case (int)ServerEnum.ServerStatus.Active:
                                    <Badge Class="m-1" Color="BadgeColor.Success">فعال</Badge>
                                    break;
                                case (int)ServerEnum.ServerStatus.DeActive:
                                    <Badge Class="m-1" Color="BadgeColor.Danger">غیر فعال</Badge>
                                    break;
                            }

                        </GridColumn>

                        <GridColumn TItem="ServerViewModel" HeaderText="عملیات" HeaderTextAlignment="Alignment.Center">
                            <div class="d-flex justify-content-center gap-2">
                                <Button Color="ButtonColor.Secondary" @onclick="() => ShowUserDetails(context)">
                                    <Icon Name="IconName.Eye" Size="@IconSize.x6" />
                                </Button>
                                <Button Color="ButtonColor.Warning" @onclick="() => OnEditUser(context.Id)">
                                    <Icon Name="IconName.PencilSquare" Size="@IconSize.x6" /> 
                                </Button>
                                <Button Color="ButtonColor.Danger" @onclick="() => OnDeleteUser(context.Id)">
                                    <Icon Name="IconName.Trash" Size="@IconSize.x6" />
                                </Button>
                            </div>
                        </GridColumn>
                        <Modal @ref="Modal" Size="ModalSize.Large" />
                    </Grid>

                </CardBody>
            </Card>
        </div>

    </div>
</div>
<script>
    window.showDeleteConfirmation = function (message) {
        return Swal.fire({
            title: 'تأیید حذف',
            text: message,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'بله، حذف شود',
            cancelButtonText: 'انصراف',
            reverseButtons: true
        }).then(result => {
            return result.isConfirmed;
        });
    };
</script>

@code {
    @inject ISweetAlertService SweetAlert

    @inject IJSRuntime JSRuntime

    private List<ServerViewModel>? ALL_SERVERS_DATA;
    private Grid<ServerViewModel>? ServerGrid;
    private Modal Modal = default!;
    private string SearchTerm = "";
    private bool isDataLoaded = false;
    private ServerWidget? SERVER_WIDGET_DATA;


    private async Task<GridDataProviderResult<ServerViewModel>> ServerDataProvider(GridDataProviderRequest<ServerViewModel> request)
    {
        // اگر داده‌ها هنوز لود نشده، لیست خالی برگردان
        if (!isDataLoaded)
            return await Task.FromResult(request.ApplyTo(new List<ServerViewModel>()));

        var filteredServers = FilterServers();
        return await Task.FromResult(request.ApplyTo(filteredServers));
    }

    private List<ServerViewModel> FilterServers()
    {
        if (string.IsNullOrWhiteSpace(SearchTerm))
            return ALL_SERVERS_DATA;

        var searchLower = SearchTerm.ToLower();
        return ALL_SERVERS_DATA.Where(srv =>
            (srv.ServerName?.ToLower().Contains(searchLower) == true) ||
            (srv.RAM.ToString().ToLower().Contains(searchLower)) ||
            (srv.CPU?.ToLower().Contains(searchLower) == true) ||
            (srv.OS?.ToLower().Contains(searchLower) == true) ||
            (srv.MainBoardModel?.ToLower().Contains(searchLower) == true) ||
            (srv.ServerManager?.Contains(SearchTerm) == true) ||
            (srv.IpAddress?.Contains(SearchTerm) == true)
        ).ToList();
    }

    private void HandleClick()
    {
        NavigationManager.NavigateTo("/server/create");
    }
    private async Task OnSearchChanged(ChangeEventArgs e)
    {
        SearchTerm = e.Value?.ToString() ?? string.Empty;
        if (ServerGrid != null)
        {
            await ServerGrid.RefreshDataAsync();
        }
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadServers();
    }
    private async Task LoadServers()
    {
        try
        {
            var res = await ServerApi.GetServerListAsync();
            var resWidget = await ServerApi.GetServerWidgetAsync();
            if (res.Success && res.Data != null)
            {
                ALL_SERVERS_DATA = res.Data;
                SERVER_WIDGET_DATA = resWidget.Data;
                isDataLoaded = true;

                // پس از بارگذاری داده‌ها، Grid را refresh کن
                await InvokeAsync(StateHasChanged);
                await RefreshGridAsync();
            }
            else
            {
                await SweetAlert.ShowErrorAsync(res.Message ?? "خطا در دریافت داده‌ها");
            }
        }
        catch (Exception ex)
        {
            await SweetAlert.ShowErrorAsync($"خطا: {ex.Message}");
        }
    }
    private async Task RefreshGridAsync()
    {
        if (ServerGrid != null)
        {
            await ServerGrid.RefreshDataAsync();
        }
    }
    private void OnAddUser()
    {
        NavigationManager.NavigateTo("/user/create");
    }

    private async Task ShowUserDetails(ServerViewModel server)
    {
        var parameters = new Dictionary<string, object>
        {
            ["Server"] = server   
        };
        await Modal.ShowAsync<ServerDetailModal>(title: "اطلاعات سرور", parameters: parameters);
    }


    private void OnEditUser(int id)
    {
        NavigationManager.NavigateTo($"/server/edit/{id}");
    }
    private async Task OnDeleteUser(int id)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("showDeleteConfirmation", new object[] { "آیا از حذف سرور مطمئن هستید؟" });
        if (confirmed)
        {
            var result = await ServerApi.DeleteServerAsync(id);
            if (result.Success)
            {
                await SweetAlert.ShowSuccessAsync(result.Message);

                var res = await ServerApi.GetServerListAsync();

                if (res.Success)
                {
                    ALL_SERVERS_DATA = res.Data; // به روز رسانی لیست کامل
                    if (ServerGrid != null)
                    {
                        await ServerGrid.RefreshDataAsync();
                    }
                }
                else
                {
                    await SweetAlert.ShowErrorAsync(res.Message);
                }
            }
            else
            {
                await SweetAlert.ShowErrorAsync(result.Message);
            }
        }
    }
}
