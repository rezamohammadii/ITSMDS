@page "/user_list"
@* @attribute [StreamRendering(true)] *@
@rendermode InteractiveServer
@using ITSMDS.Web.ApiClient
@using ITSMDS.Web.ViewModel

@inject UserApiClient userApi
@inject NavigationManager NavigationManager


<h3 class="mb-4">لیست کاربران</h3>

<button class="btn btn-success mb-3" @onclick="OnAddUser">
    <i class="fas fa-user fa-lg"></i> افزودن کاربر
</button>

@if (users == null)
{
    <div class="text-center my-5">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">در حال بارگذاری...</span>
        </div>
        <p class="mt-3">در حال دریافت اطلاعات کاربران...</p>
    </div>
}
else if (users.Length == 0)
{
    <div class="alert alert-warning mt-4" role="alert">
        هیچ کاربری یافت نشد.
    </div>
}
else
{
    <div class="card shadow-sm border-0 mt-4">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">لیست کاربران</h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered table-hover table-striped align-middle text-center">
                    <thead class="table-light">
                        <tr>
                            <th>شناسه کاربری</th>
                            <th>نام</th>
                            <th>نام خانوادگی</th>
                            <th>نام کاربری</th>
                            <th>کد پرسنلی</th>
                            <th>عملیات</th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in users)
                        {
                            <tr>
                                <td>@user.HashId</td>
                                <td>@user.FirstName</td>
                                <td>@user.LastName</td>
                                <td>@user.UserName</td>
                                <td>@user.PersonalCode</td>
                                <td>
                                    <button class="btn btn-sm btn-warning me-2" @onclick="() => OnEditUser(user.PersonalCode)">
                                        <i class="fas fa-file-edit fa-lg"></i>
                                    </button>
                                    <button class="btn btn-sm btn-danger" @onclick="() => OnDeleteUser(user.HashId)">
                                        <i class="fas fa-trash fa-lg"></i>
                                    </button>
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

<script>

        window.showDeleteConfirmation = function (message) {
        return Swal.fire({
            title: 'تأیید حذف',
            text: message,
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'بله، حذف شود',
            cancelButtonText: 'انصراف',
            reverseButtons: true
        }).then(result => {
            return result.isConfirmed;
        });
    };

</script>


@code {
    @inject IJSRuntime JSRuntime

    private UserModel[]? users;

    protected override async Task OnInitializedAsync()
    {
        users = await userApi.GetUserListAsync();
    }

    private void OnAddUser()
    {
        NavigationManager.NavigateTo("/user/create");
    }

    private void OnEditUser(int personalCode)
    {
        NavigationManager.NavigateTo($"/user/edit/{personalCode}");
    }

    private async Task OnDeleteUser(string hashId)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("showDeleteConfirmation", new object[] { "آیا از حذف کاربر مطمئن هستید؟" });
        if (confirmed)
        {
            var result = await userApi.DeleteUserAsync(hashId);
            if (result)
            {
                users = await userApi.GetUserListAsync();
            }
        }
    }
}

