@page "/user/edit/{PersonalCode}"

@inject UserApiClient userApi
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject IConfiguration Configuration

<h4 class="mb-4 text-gradient">ویرایش کاربر</h4>


@if (PermissionService.HasPermission(PermissionName.USER_EDIT))
{
    @if (user == null)
    {
        <p>در حال بارگذاری اطلاعات...</p>
    }
    else
    {
        <EditForm Model="user" OnValidSubmit="HandleValidSubmit" class="row g-3" FormName="EditUser">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="col-md-6">
                <label class="form-label">نام</label>
                <InputText class="form-control" @bind-Value="user.FirstName" />
            </div>

            <div class="col-md-6">
                <label class="form-label">نام خانوادگی</label>
                <InputText class="form-control" @bind-Value="user.LastName" />
            </div>

            <div class="col-md-6">
                <label class="form-label">نام کاربری</label>
                <InputText class="form-control" @bind-Value="user.UserName" />
            </div>

            <div class="col-md-6">
                <label class="form-label">کد پرسنلی</label>
                <InputNumber class="form-control" @bind-Value="user.PersonalCode" />
            </div>

            <div class="col-md-6">
                <label class="form-label">ایمیل</label>
                <InputText class="form-control" @bind-Value="user.Email" />
            </div>

            <div class="col-md-6">
                <label class="form-label">شماره تماس</label>
                <InputText class="form-control" @bind-Value="user.PhoneNumber" />
            </div>

            <div class="col-md-12">
                <label class="form-label">آدرس IP</label>
                <InputText class="form-control" @bind-Value="user.IpAddress" />
            </div>

            <div class="d-flex gap-3 pt-4 border-top">
                <button type="submit" class="btn btn-success" >
                    💾 ذخیره تغییرات
                </button>

                <button type="button" class="btn btn-outline-secondary" @onclick="HandleReset">
                    🔄 بازنشانی
                </button>
            </div>
        </EditForm>
    }
}
else
{
    <p>شما دسترسی به این صفحه را ندارید</p>
}



@code {
    [Parameter]
    public string? PersonalCode { get; set; }
    @inject AuthenticationStateProvider AuthStateProvider;
    @inject PermissionService PermissionService
    @inject ISweetAlertService SweetAlert

    private UserViewModel? user;
    private UserViewModel? userOld;
    private List<string> userPermissions = new();
   

    protected override async Task OnInitializedAsync()
    {
        await PermissionService.InitializeAsync();

        if (PersonalCode is not null )
        {

            var res = await userApi.GetUserAsync(int.Parse(PersonalCode));

            if (res.Success)
            {

                user = res.Data;
                userOld = user;
            }
            else
            {
                await SweetAlert.ShowErrorAsync(res.Message);
            }

        }

    }
    private async Task HandleValidSubmit()
    {
        var result = await userApi.EditUserAsync(user!);
        if (result.Success)
        {
            await SweetAlert.ShowSuccessAsync(result.Message);

            NavigationManager.NavigateTo("/users");
        }
    }

    private void HandleReset()
    {
        //user = userOld;
        StateHasChanged();
        NavigationManager.NavigateTo(NavigationManager.Uri, forceLoad: true);
    }

}
