@page "/user/create"
@using ITSMDS.Web.ApiClient
@using ITSMDS.Web.ViewModel
@inject IConfiguration Configuration
@inject IJSRuntime JS
@inject NavigationManager NavigationManager
@inject UserApiClient userApi
@inject ISweetAlertService SweetAlert


<EditForm Model="@user" OnValidSubmit="HandleValidSubmit" class="space-y-6" >
    <DataAnnotationsValidator />
    <ValidationSummary />



    <div class="d-flex align-items-center justify-content-between gap-4 flex-wrap mb-5">

        <div class="d-flex flex-column">
            <h1 class="h4 fw-bold text-dark">افزودن کاربر جدید</h1>
            <p class="text-muted mt-1">ایجاد حساب کاربری جدید در سیستم</p>
        </div>

        <Button Color="ButtonColor.Warning" Class="me-auto">
            <Icon Name="IconName.ArrowRight" /> بازگشت
        </Button>
    </div>


    <div class="row g-4">
        <div class="col-md-6">
            <label class="form-label">نام *</label>
            <InputText class="form-control" @bind-Value="user.FirstName" placeholder="نام را وارد کنید" />
            <ValidationMessage For="@(() => user.FirstName)" />
        </div>

        <div class="col-md-6">
            <label class="form-label">نام خانوادگی *</label>
            <InputText class="form-control" @bind-Value="user.LastName" placeholder="نام خانوادگی را وارد کنید" />
            <ValidationMessage For="@(() => user.LastName)" />
        </div>
    </div>

    <div class="row g-4">
        <div class="col-md-6">
            <label class="form-label">کد پرسنلی *</label>
            <InputText class="form-control" @bind-Value="user.PersonalCode" placeholder="21345" />
            <ValidationMessage For="@(() => user.PersonalCode)" />
        </div>

        <div class="col-md-6">
            <label class="form-label">نام کاربری *</label>
            <InputText class="form-control" @bind-Value="user.UserName" />
            <ValidationMessage For="@(() => user.UserName)" />
        </div>
    </div>

    <div class="row g-4">
        <div class="col-md-6">
            <label class="form-label">ایمیل سازمانی *</label>
            <InputText class="form-control text-start" @bind-Value="user.Email" placeholder="user@company.com" />
            <ValidationMessage For="@(() => user.Email)" />
        </div>

        <div class="col-md-6">
            <label class="form-label">تلفن دفتر *</label>
            <InputText class="form-control text-start" @bind-Value="user.PhoneNumber" placeholder="+9821-12345678" />
            <ValidationMessage For="@(() => user.PhoneNumber)" />
        </div>
    </div>
    <div class="row g-4">
        <div class="col-md-6">
            <label class="form-label">رمز عبور *</label>
            <PasswordInput class="form-control text-start"  @bind-Value="user.Password" />
            <ValidationMessage For="@(() => user.Password)" />
        </div>

        <div class="col-md-6">
            <label class="form-label">تکرار رمز عبور *</label>
            <PasswordInput class="form-control text-start" @bind-Value="user.ConfirmPassword" />
            <ValidationMessage For="@(() => user.ConfirmPassword)" />
        </div>
    </div>

    <!-- اطلاعات سیستم -->
    <div class="row g-4">
        <div class="col-md-6">
            <label class="form-label">آی‌پی سیستم *</label>
            <InputText class="form-control text-start" @bind-Value="user.IpAddress" placeholder="192.168.1.100" />
            <ValidationMessage For="@(() => user.IpAddress)" />
        </div>
    </div>

    <!-- دکمه‌های فرم -->
    <div class="d-flex gap-3 pt-4 border-top">
        <button type="submit" class="btn btn-success" disabled="@isSubmitting">
            💾 ذخیره کاربر
        </button>

        <button type="button" class="btn btn-outline-secondary" @onclick="HandleReset" disabled="@isSubmitting">
            🔄 بازنشانی
        </button>

        @* <button type="button" class="btn btn-light" @onclick="HandleCancel" disabled="@isSubmitting"> *@
        @*     ❌ انصراف *@
        @* </button> *@
    </div>
</EditForm>



@code {

    private UserModelIn user = new();
    private bool isSubmitting = false;
    [Inject] protected PreloadService PreloadService { get; set; } = default!;

    private async void HandleValidSubmit()
    {
        try
        {
            PreloadService.Show(SpinnerColor.Primary);
            var res = await userApi.CreateUserAsync(user);
            if (!res)
            {
                await SweetAlert.ShowErrorAsync("خطا در ایجاد کاربر جدید");
                return;
            }

            await SweetAlert.ShowSuccessAsync("کاربر با موفقیت اضافه شد");
            StateHasChanged();
        }
        catch (Exception ex)
        {
            await SweetAlert.ShowErrorAsync($"خطا در ساخت کاربر: {ex.Message}");

        }
        finally
        {
            PreloadService.Hide();
        }    
        
    }

    private void HandleReset()
    {
        user = new();
    }

    private void NavigateToUsers()
    {
        NavigationManager.NavigateTo("/users");
    }


}